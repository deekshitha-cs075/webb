Your signup process in signup.jsp is mostly correct and follows good practices like password hashing with SHA-256 and database insertion with prepared statements. However, there are a few improvements you should consider:


---

‚úÖ Issues & Improvements:

1. Security Issues:

SHA-256 alone is not secure for storing passwords because it's fast and can be brute-forced. Instead, use BCrypt or PBKDF2.

Never store plain passwords, even if hashed. Use a salted hash to prevent dictionary attacks.



2. Code Organization:

Business logic should be handled in a servlet instead of JSP.

DBConnection.getConnection() should be used for a reusable connection.



3. Email Duplication Check:

Your code does not check if the email already exists before inserting. A duplicate email will throw an SQL error.





---

üîß Step 1: Improved DBConnection.java (Reusability)

Instead of hardcoding the database connection in multiple places, update DBConnection.java to make it reusable:

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DBConnection {
    private static final String URL = "jdbc:mysql://localhost:3306/UserDB";
    private static final String USER = "root";  // Change as per your setup
    private static final String PASSWORD = ""; // Change if you have a MySQL password

    public static Connection getConnection() throws SQLException {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(URL, USER, PASSWORD);
        } catch (ClassNotFoundException | SQLException e) {
            throw new SQLException("Database Connection Failed!", e);
        }
    }
}


---

üîß Step 2: Create a Signup Servlet (SignupServlet.java)

Instead of handling database logic in signup.jsp, create a Servlet:

üìù File: SignupServlet.java

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.security.MessageDigest;
import java.math.BigInteger;

@WebServlet("/SignupServlet")
public class SignupServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String firstName = request.getParameter("first_name");
        String lastName = request.getParameter("last_name");
        String email = request.getParameter("email");
        String password = request.getParameter("password");
        String confirmPassword = request.getParameter("confirm_password");

        if (!password.equals(confirmPassword)) {
            response.sendRedirect("signup.jsp?error=Passwords do not match!");
            return;
        }

        // Hash the password using SHA-256
        String hashedPassword = hashPassword(password);

        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;

        try {
            conn = DBConnection.getConnection();

            // Check if the email already exists
            pst = conn.prepareStatement("SELECT email FROM users WHERE email = ?");
            pst.setString(1, email);
            rs = pst.executeQuery();
            if (rs.next()) {
                response.sendRedirect("signup.jsp?error=Email already registered!");
                return;
            }

            // Insert user into the database
            pst = conn.prepareStatement("INSERT INTO users (first_name, last_name, email, password) VALUES (?, ?, ?, ?)");
            pst.setString(1, firstName);
            pst.setString(2, lastName);
            pst.setString(3, email);
            pst.setString(4, hashedPassword);

            int row = pst.executeUpdate();
            if (row > 0) {
                response.sendRedirect("login.jsp?success=Signup Successful! Please login.");
            } else {
                response.sendRedirect("signup.jsp?error=Signup Failed! Try again.");
            }
        } catch (Exception e) {
            e.printStackTrace();
            response.sendRedirect("signup.jsp?error=Database Error!");
        } finally {
            try {
                if (rs != null) rs.close();
                if (pst != null) pst.close();
                if (conn != null) conn.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    private String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] messageDigest = md.digest(password.getBytes());
            BigInteger no = new BigInteger(1, messageDigest);
            String hashText = no.toString(16);
            while (hashText.length() < 32) {
                hashText = "0" + hashText;
            }
            return hashText;
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}


---

üîß Step 3: Update signup.jsp to Use the Servlet

Modify signup.jsp to remove JSP scriptlets and handle errors using query parameters.

üìù Updated signup.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <title>Signup</title>
</head>
<body>
    <h2>Signup Form</h2>

    <% if (request.getParameter("error") != null) { %>
        <p style="color: red;"><%= request.getParameter("error") %></p>
    <% } %>

    <form action="SignupServlet" method="post">
        First Name: <input type="text" name="first_name" required><br><br>
        Last Name: <input type="text" name="last_name" required><br><br>
        Email: <input type="email" name="email" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        Confirm Password: <input type="password" name="confirm_password" required><br><br>
        <input type="submit" value="Signup">
    </form>

    <p>Already have an account? <a href="login.jsp">Login here</a></p>
</body>
</html>


---

üîß Step 4: Implement login.jsp and LoginServlet.java

üìù login.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
</head>
<body>
    <h2>Login</h2>

    <% if (request.getParameter("error") != null) { %>
        <p style="color: red;"><%= request.getParameter("error") %></p>
    <% } %>

    <form action="LoginServlet" method="post">
        Email: <input type="email" name="email" required><br><br>
        Password: <input type="password" name="password" required><br><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>

üìù LoginServlet.java

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

@WebServlet("/LoginServlet")
public class LoginServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String email = request.getParameter("email");
        String password = request.getParameter("password");

        try {
            Connection con = DBConnection.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM users WHERE email=? AND password=?");
            ps.setString(1, email);
            ps.setString(2, SignupServlet.hashPassword(password));  // Hash before checking

            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                HttpSession session = request.getSession();
                session.setAttribute("user", email);
                response.sendRedirect("welcome.jsp");
            } else {
                response.sendRedirect("login.jsp?error=Invalid Credentials");
            }
        } catch (Exception e) {
            e.printStackTrace();
            response.sendRedirect("login.jsp?error=Database Error!");
        }
    }
}


---

‚úÖ Final Improvements:

‚úî Secure password hashing
‚úî Moved logic from JSP to Servlets
‚úî Checked for duplicate emails before signup
‚úî Better error handling

Let me know if you need further improvements! üöÄ

